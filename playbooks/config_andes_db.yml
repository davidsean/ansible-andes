# The Andes stack needs two containers andes-web webserver and andes-db database server
# Web request must be forwarded to the andes-web container.
# The andes-web container must access andes-db
# An additional nginx-proxy container will forward web requests to andes-web
# Optional database (read-only) connections to the database can be made via the proxy.
# The andes-web container will need a github deploy key to download the code.
# Supply the private part of the key as ./files/id_rsa_andes
# and it will be copied to the container
# to update the code/fixtures, use the update_fixtures.yaml playbook

- name: Database init. Install apt software dependencies
  hosts: andes-db
  tasks:
    - name: Install MySQL
      apt:
        update_cache: yes
        pkg: 
          - mysql-server
          - python3-mysqldb #needed to interact with the db
        state: present

    - name: ensure mysql is configured to bind to the specified address and port
      ini_file:
        dest: /etc/mysql/my.cnf
        section: mysqld
        option: "{{ item.option }}"
        value: "{{ item.value }}"
      # register: my_cnf
      with_items:
        - { option: bind-address, value: "{{ db_host }}" }
        # consider all
        # - { option: bind-address, value: 0.0.0.0 } 

    - name: update mysql root password for local root account
      mysql_user: 
        name: root 
        host: localhost 
        priv: "*.*:ALL,GRANT"
        state: present

    - name: write mysqlconf from jinja2 template
      ansible.builtin.template:
        src: ../templates/mysql_conf.j2
        dest: /root/.my.cnf
        owner: root
        group: root
        mode: 0644

    - name: restart the mysql service 
      shell: "service mysql restart"

    - name: ensure mysql is enabled to run on startup 
      service: 
        name: mysql
        state: started
        enabled: true

    - name: create the database
      mysql_db: 
        login_user: root
        login_password: "{{ db_root_password }}"
        name: "{{ db_name }}"
        state: present

    - name: create the andes root user
      mysql_user: 
        login_user: root
        login_password: "{{ db_root_password }}"
        name: "{{ db_user_name }}"
        password: "{{ db_user_password }}"
        # restrict this user to andes-web container 
        host: "{{ web_host }}"
        priv: "{{ db_name }}.*:ALL,GRANT"
        state: present

    - name: create the a read-only debugging user
      mysql_user: 
        login_user: root
        login_password: "{{ db_root_password }}"
        name: "{{ db_user_name }}"
        password: "{{ db_ro_password }}"
        host: "%"
        priv: "{{ db_name }}.*:SELECT,GRANT"
        state: present
